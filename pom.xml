<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>luksi1</groupId>
  <artifactId>puppet-foreman-stack</artifactId>
  <version>0.0.1</version>
  <packaging>pom</packaging>
  <properties>
    <domain>dummy.test</domain>
    <r10k.control.repo>https://github.com/luksi1/control-repo</r10k.control.repo>
    <puppet.version>5.3.5</puppet.version>
    <foreman.version>6.0.1</foreman.version>
    <puppetdb.version>5.2.4</puppetdb.version>
    <r10k.version>0.1.1</r10k.version>
    <foreman.servername>foreman</foreman.servername>
    <puppetagent.servername>puppet-agent</puppetagent.servername>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Version of theFabric8 Docker Maven plugin. -->
    <docker-maven-plugin.version>0.21.0</docker-maven-plugin.version>
    <!--Log output during creation of Docker image to standard out. -->
    <docker.verbose>true</docker.verbose>
    <docker.autoCreateCustomNetworks>true</docker.autoCreateCustomNetworks>
    <root.subject>/C=SE/ST=Vastra Gotaland/L=Gothenburg/O=Acme/CN=root.${domain}</root.subject>
    <intermediate.subject>/C=SE/ST=Vastra Gotaland/L=Gothenburg/O=Acme/CN=intermediate.${domain}</intermediate.subject>
    <foreman.subject>/C=SE/ST=Vastra Gotaland/L=Gothenburg/O=Acme/CN=${foreman.servername}.${domain}</foreman.subject>
    <crl.distribution.points>URI:http://${foreman.servername}.${domain}/crl.pem</crl.distribution.points>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy.modules</groupId>
      <artifactId>groovyws</artifactId>
      <version>0.5.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy.modules.http-builder</groupId>
      <artifactId>http-builder</artifactId>
      <version>0.6</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <images>
            <image>
              <name>luksi1/root-certificate-builder:latest</name>
              <run>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/certificates:/export</volume>
                  </bind>
                </volumes>
                <env>
                  <ROOT_SUBJECT>${root.subject}</ROOT_SUBJECT>
                </env>
                <wait>
                  <log>certificate created</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>luksi1/intermediate-certificate-builder:latest</name>
              <run>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/certificates:/export</volume>
                  </bind>
                </volumes>
                <env>
                  <INTERMEDIATE_SUBJECT>${intermediate.subject}</INTERMEDIATE_SUBJECT>
                  <CRL_DISTRIBUTION_POINTS>${crl.distribution.points}</CRL_DISTRIBUTION_POINTS>
                </env>
                <wait>
                  <log>certificate created</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>luksi1/server-certificate-builder:latest</name>
              <run>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/certificates:/export</volume>
                  </bind>
                </volumes>
                <env>
                  <SERVER_SUBJECT>${foreman.subject}</SERVER_SUBJECT>
                </env>
                <wait>
                  <log>certificate created</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>puppetdb-postgres</name>
              <alias>puppetdb-postgres</alias>
              <build>
                <dockerFileDir>${project.basedir}/src/main/puppetdb-postgres</dockerFileDir>
              </build>
              <run>
                <ports>
                  <port>5432</port>
                </ports>
                <env>
                   <POSTGRES_PASSWORD>puppetdb</POSTGRES_PASSWORD>
                   <POSTGRES_USER>puppetdb</POSTGRES_USER>
                   <POSTGRES_DB>puppetdb</POSTGRES_DB>
                </env>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/src/main/volumes/puppetdb-postgres/data:/var/lib/postgresql/data/</volume>
                  </bind>
                </volumes>
                <network>
                  <name>puppet-foreman-network</name>
                  <alias>puppetdb-postgres</alias>
                </network>
                <wait>
                  <time>30000</time>
                  <log>database system is ready to accept connections</log>
                </wait>
              </run>
            </image>
            <image>
              <name>docker.io/postgres:9.6</name>
              <alias>foreman-postgres</alias>
              <run>
                <ports>
                  <port>5433</port>
                </ports>
                <cmd>-p 5433</cmd>
                <env>
                   <POSTGRES_PASSWORD>foreman</POSTGRES_PASSWORD>
                   <POSTGRES_USER>foreman</POSTGRES_USER>
                   <POSTGRES_DB>foreman</POSTGRES_DB>
                </env>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/src/main/volumes/foreman-postgres/data:/var/lib/postgresql/data/</volume>
                  </bind>
                </volumes>
                <network>
                  <name>puppet-foreman-network</name>
                  <alias>foreman-postgres</alias>
                </network>
                <wait>
                  <time>30000</time>
                  <log>database system is ready to accept connections</log>
                </wait>
              </run>
            </image>
            <image>
              <name>puppetserver:${puppet.version}</name>
              <alias>puppet</alias>
              <build>
                <dockerFileDir>${project.basedir}/src/main/puppet</dockerFileDir>
              </build>
              <run>
                <hostname>puppet.${domain}</hostname>
                <ports>
                  <port>8140:8140</port>
                </ports>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/code:/etc/puppetlabs/code/</volume>
                    <volume>${project.basedir}/volumes/puppet/ssl:/etc/puppetlabs/puppet/ssl/</volume>
                    <volume>${project.basedir}/volumes/puppet/serverdata:/opt/puppetlabs/server/data/puppetserver/</volume>
                  </bind>
                </volumes>
                <wait>
                  <time>120000</time>
                  <log>Puppet Server has successfully started and is now ready to handle requests</log>
                </wait>
                <network>
                  <name>puppet-foreman-network</name>
                  <alias>puppet</alias>
                </network>
              </run>
            </image>
            <image>
              <name>docker.io/puppet/puppetdb:${puppetdb.version}</name>
              <alias>puppetdb</alias>
              <run>
                <hostname>puppetdb</hostname>
                <ports>
                  <port>8081:8081</port>
                  <port>8080:8080</port>
                </ports>
                <env>
                   <PUPPETDB_DATABASE_CONNECTION>//puppetdb-postgres:5432/puppetdb</PUPPETDB_DATABASE_CONNECTION>
                </env>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/puppetdb/ssl:/etc/puppetlabs/puppet/ssl/</volume>
                  </bind>
                </volumes>
                <wait>
                  <!--<log>PuppetDB finished starting</log>-->
                  <log>Starting database garbage collection</log>
                  <time>60000</time>
                </wait>
                <network>
                  <name>puppet-foreman-network</name>
                  <alias>puppetdb</alias>
                </network>
              </run>
            </image>
            <image>
              <name>docker.io/puppet/puppet-agent-ubuntu:latest</name>
              <alias>puppet-agent</alias>
              <run>
                <hostname>${puppetagent.servername}.${domain}</hostname>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/puppet/ssl:/etc/puppetlabs/puppet/ssl/</volume>
                  </bind>
                </volumes>
                <wait>
                  <time>10000</time>
                </wait>
                <cmd>agent -t --server=puppet --waitforcert 10</cmd>
                <network>
                  <name>puppet-foreman-network</name>
                  <alias>puppet-agent</alias>
                </network>
              </run>
            </image>
            <image>
              <name>docker.io/luksi1/foreman:latest</name>
              <alias>foreman</alias>
              <build>
                <dockerFileDir>${project.basedir}/src/main/foreman</dockerFileDir>
                <args>
                  <FOREMAN_RELEASE>1.20</FOREMAN_RELEASE>
                </args>
              </build>
              <run>
                <hostname>${foreman.servername}.${domain}</hostname>
                <ports>
                  <port>443:443</port>
                </ports>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/foo:/foo</volume>
                    <volume>${project.basedir}/volumes/certificates/certs/${foreman.servername}.${domain}.crt:/certs/public.crt</volume>
                    <volume>${project.basedir}/volumes/certificates/certs/ca-chain.crt:/certs/cachain.pem</volume>
                    <volume>${project.basedir}/volumes/certificates/private/${foreman.servername}.${domain}.key:/certs/private.key</volume>
                    <volume>${project.basedir}/volumes/certificates/certs/root.crt:/certs/ca.pem</volume>
                    <volume>${project.basedir}/volumes/certificates/crl/intermediate.crl:/certs/crl.pem</volume>
                  </bind>
                </volumes>
                <wait>
                  <log>loaded module mpm_worker_module</log>
                  <time>180000</time>
                </wait>
                <network>
                  <name>puppet-foreman-network</name>
                  <alias>${forman.servername}</alias>
                </network>
                <env>
                   <ADMIN_PASSWORD>Abcd1234</ADMIN_PASSWORD>
                   <DATABASE_TYPE>postgresql</DATABASE_TYPE>
                   <DATABASE_HOST>foreman-postgres</DATABASE_HOST>
                   <DATABASE_PORT>5433</DATABASE_PORT>
                   <DATABASE_USER>foreman</DATABASE_USER>
                   <DATABASE_PASSWORD>foreman</DATABASE_PASSWORD>
                   <HOSTNAME>${foreman.servername}</HOSTNAME>
                   <DOMAIN>${domain}</DOMAIN>
                </env>
              </run>
            </image>
            <!--
            <image>
              <name>docker.io/luksi1/puppet-smart-proxy:latest</name>
              <alias>puppet-smart-proxy</alias>
              <build>
                <dockerFileDir>${project.basedir}/src/main/foreman</dockerFileDir>
                <args>
                  <FOREMAN_RELEASE>1.20</FOREMAN_RELEASE>
                  <FOREMAN_PACKAGE_VERSION>1.20.0-1</FOREMAN_PACKAGE_VERSION>
                </args>
              </build>
              <run>
                <hostname>puppet-smart-proxy.${domain}</hostname>
                <ports>
                  <port>443:443</port>
                </ports>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/puppet/ssl:/etc/puppetlabs/puppet/ssl/</volume>
                  </bind>
                </volumes>
                <wait>
                  <time>120000</time>
                </wait>
                <env>
                  <TRUSTED_HOSTS>foreman,foreman.${domain},puppet,puppet.${domain}</TRUSTED_HOSTS>
                  <FORWARD_VERIFY>false</FORWARD_VERIFY>
                  <PUPPET_VERSION>${puppet.version}</PUPPET_VERSION>
                  <PUPPET_URL>https://puppet.${domain}:8140</PUPPET_URL>
                </env>
                <network>
                  <name>puppet-foreman-network</name>
                  <alias>puppet-smart-proxy</alias>
                </network>
              </run>
            </image>
            -->
          </images>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <goals>
              <goal>generateStubs</goal>
              <goal>compile</goal>
              <goal>generateTestStubs</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.12</version>
        <configuration>
          <systemPropertyVariables>
            <puppetAgentHostname>${puppetagent.servername}.${domain}</puppetAgentHostname>
            <volumesDir>${project.basedir}/volumes</volumesDir>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
