<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>luksi1</groupId>
  <artifactId>puppet-foreman-stack</artifactId>
  <version>1</version>
  <packaging>pom</packaging>
  <properties>
   <timestamp>${maven.build.timestamp}</timestamp>
   <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
    <domain>dummy.test</domain>
    <control.repo>https://github.com/luksi1/puppet-control-repo-example</control.repo>
    <puppet.version>6.2.1</puppet.version>
    <foreman.release>1.20</foreman.release>
    <r10k.version>3.2.0</r10k.version>
    <puppetdb.version>6.2.0</puppetdb.version>
    <foreman.servername>foreman</foreman.servername>
    <foreman.port>443</foreman.port>
    <puppet.smartproxy.servername>puppet-smart-proxy</puppet.smartproxy.servername>
    <puppetagent.servername>puppet-agent</puppetagent.servername>
    <r10k.servername>r10k</r10k.servername>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Version of theFabric8 Docker Maven plugin. -->
    <docker-maven-plugin.version>0.29.0</docker-maven-plugin.version>
    <!--Log output during creation of Docker image to standard out. -->
    <docker.verbose>true</docker.verbose>
    <docker.autoCreateCustomNetworks>true</docker.autoCreateCustomNetworks>
    <root.subject>/C=SE/ST=Vastra Gotaland/L=Gothenburg/O=Acme/CN=root.${domain}</root.subject>
    <intermediate.subject>/C=SE/ST=Vastra Gotaland/L=Gothenburg/O=Acme/CN=intermediate.${domain}</intermediate.subject>
    <foreman.subject>/C=SE/ST=Vastra Gotaland/L=Gothenburg/O=Acme/CN=${foreman.servername}.${domain}</foreman.subject>
    <puppet.smartproxy.subject>/C=SE/ST=Vastra Gotaland/L=Gothenburg/O=Acme/CN=${puppet.smartproxy.servername}.${domain}</puppet.smartproxy.subject>
    <crl.distribution.points>URI:http://${foreman.servername}.${domain}/crl.pem</crl.distribution.points>
    <puppet.network>puppet-foreman-network</puppet.network>
    <docker.envPropertyFile>src/main/compose/.env</docker.envPropertyFile>
<!--
    <env>
                  <domain>dummy.test</domain>
                  <foreman_servername>foreman</foreman_servername>
                  <puppet_servername>puppet</puppet_servername>
                  <puppet_smartproxy_servername>puppet-smart-proxy</puppet_smartproxy_servername>
                  <r10k_servername>r10k</r10k_servername>
                  <control_repo>https://github.com/luksi1/puppet-control-repo-example</control_repo>
                  <foreman_server_cert_file>../../../volumes/certificates/certs/foreman.dummy.test.crt</foreman_server_cert_file>
                  <foreman_server_cert_key_file>../../../volumes/certificates/private/foreman.dummy.test.key</foreman_server_cert_key_file>
                  <foreman_server_cert_chain_file>../../../volumes/certificates/certs/ca-chain.crt</foreman_server_cert_chain_file>
                  <puppetdb_version>6.2.0</puppetdb_version>
                  <puppetserver_version>6.2.1</puppetserver_version>
                </env>-->
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy.modules</groupId>
      <artifactId>groovyws</artifactId>
      <version>0.5.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy.modules.http-builder</groupId>
      <artifactId>http-builder</artifactId>
      <version>0.7.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-json</artifactId>
      <version>2.5.6</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <images>
            <image>
              <name>luksi1/root-certificate-builder:latest</name>
              <run>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/certificates:/export</volume>
                  </bind>
                </volumes>
                <env>
                  <ROOT_SUBJECT>${root.subject}</ROOT_SUBJECT>
                </env>
                <wait>
                  <log>certificate created</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>luksi1/intermediate-certificate-builder:latest</name>
              <run>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/certificates:/export</volume>
                  </bind>
                </volumes>
                <env>
                  <INTERMEDIATE_SUBJECT>${intermediate.subject}</INTERMEDIATE_SUBJECT>
                  <CRL_DISTRIBUTION_POINTS>${crl.distribution.points}</CRL_DISTRIBUTION_POINTS>
                </env>
                <wait>
                  <log>certificate created</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>luksi1/server-certificate-builder:latest</name>
              <run>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/certificates:/export</volume>
                  </bind>
                </volumes>
                <env>
                  <SERVER_SUBJECT>${foreman.subject}</SERVER_SUBJECT>
                  <SERVER_KEY_PERMISSIONS>444</SERVER_KEY_PERMISSIONS>
                </env>
                <wait>
                  <log>certificate created</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>luksi1/server-certificate-builder:latest</name>
              <run>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/certificates:/export</volume>
                  </bind>
                </volumes>
                <env>
                  <SERVER_SUBJECT>${puppet.smartproxy.subject}</SERVER_SUBJECT>
                  <SERVER_KEY_PERMISSIONS>444</SERVER_KEY_PERMISSIONS>
                </env>
                <wait>
                  <log>certificate created</log>
                  <time>10000</time>
                </wait>
              </run>
            </image>
            <image>
              <name>postgres:9.6</name>
              <alias>puppetdb-postgres</alias>
              <external> 
                <type>compose</type> 
                <basedir>src/main/compose</basedir> 
                <composeFile>docker-compose.yml</composeFile>
              </external>
            </image>
            <image>
              <name>postgres:9.6</name>
              <alias>foreman-postgres</alias>
              <external> 
                <type>compose</type> 
                <basedir>src/main/compose</basedir> 
                <composeFile>docker-compose.yml</composeFile>
              </external>
            </image>
            <image>
              <name>luksi1/puppetserver-foreman:${puppet.version}-%v</name>
              <alias>puppet</alias>
              <external> 
                <type>compose</type> 
                <basedir>src/main/compose</basedir> 
                <composeFile>docker-compose.yml</composeFile>
              </external>
            </image>
            <image>
              <name>puppet/puppetdb:${puppetdb.version}</name>
              <alias>puppetdb</alias>
              <external> 
                <type>compose</type> 
                <basedir>src/main/compose</basedir> 
                <composeFile>docker-compose.yml</composeFile>
              </external>
            </image>
            <image>
              <name>docker.io/puppet/puppet-agent-ubuntu:latest</name>
              <run>
                <hostname>${foreman.servername}.${domain}</hostname>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/puppet/ssl:/etc/puppetlabs/puppet/ssl/</volume>
                  </bind>
                </volumes>
                <wait>
                  <time>10000</time>
                </wait>
                <network>
                  <name>puppet-foreman-network</name>
                </network>
              </run>
            </image>
            <image>
              <name>docker.io/puppet/puppet-agent-ubuntu:latest</name>
              <run>
                <hostname>${puppet.smartproxy.servername}.${domain}</hostname>
                <volumes>
                  <bind>
                    <volume>${project.basedir}/volumes/puppet/ssl:/etc/puppetlabs/puppet/ssl/</volume>
                  </bind>
                </volumes>
                <wait>
                  <time>10000</time>
                </wait>
                <network>
                  <name>puppet-foreman-network</name>
                </network>
              </run>
            </image>
            <image>
              <name>luksi1/foreman:${foreman.release}-%v</name>
              <alias>foreman</alias>
              <external> 
                <type>compose</type> 
                <basedir>src/main/compose</basedir> 
                <composeFile>docker-compose.yml</composeFile>
              </external>
            </image>
            <image>
              <name>luksi1/puppet-smart-proxy:${foreman.release}-%v</name>
              <alias>puppet-smart-proxy</alias>
              <external> 
                <type>compose</type> 
                <basedir>src/main/compose</basedir> 
                <composeFile>docker-compose.yml</composeFile>
              </external>
            </image>
            <image>
              <name>luksi1/r10k:${r10k.version}-%v</name>
              <alias>${r10k.servername}</alias>
              <external> 
                <type>compose</type> 
                <basedir>src/main/compose</basedir> 
                <composeFile>docker-compose.yml</composeFile>
              </external>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <goals>
              <goal>generateStubs</goal>
              <goal>compile</goal>
              <goal>generateTestStubs</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.12</version>
        <configuration>
          <systemPropertyVariables>
            <puppetAgentHostname>${puppet.smartproxy.servername}.${domain}</puppetAgentHostname>
            <volumesDir>${project.basedir}/volumes</volumesDir>
            <puppetdbPort>${puppetdb.port}</puppetdbPort>
            <puppetdbSslPort>${puppetdb.ssl.port}</puppetdbSslPort>
            <puppetPort>${puppet.port}</puppetPort>
            <foremanPort>${foreman.port}</foremanPort>
            <r10kPort>${r10k.port}</r10kPort>
            <puppetSmartproxyPort>${puppet.smartproxy.port}</puppetSmartproxyPort>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <phase>verify</phase>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
